-- 5. Вывести все автобусы в порядке уменьшения количества мест.
-- 5. Вывести всех служащих в порядке уменьшения дат день рождений.

USE d_employees;

SELECT
	*
FROM
	employees
ORDER BY
	birth_date DESC ;

-- 19	1999-12-29	Averil	Garvey	F	2005-08-18
-- 23	1999-01-04	Agnella	Orts	F	2014-06-24
-- 31	1998-12-04	Lou	Witterick	F	2017-02-18


-- 6. Перечислить известные агрегирующие функции в MySQL.

-- MIN() - подсчет минимального значения,
-- MAX() - подсчет максимального значения,
-- COUN() - подсчет количества,
-- AVG() - подсчет среднего значения,
-- SUM() - подсчет суммы.


-- 7. Есть таблица с полями first_name, last_name и id.
-- Нужно вывести имя с наибольшим id, не используя при этом команду MAX.
-- Как это можно сделать?

SELECT
	id, CONCAT(first_name, last_name) AS name
FROM
	employees
ORDER BY
	id DESC
LIMIT 1 ;

-- 40	MalachiPhoebe


-- 8. Обязательно ли писать команды прописными буквами?
-- Сработает ли запрос, если его написать строчными буквами?

-- Исполнение команд не зависит от регистра написания команд.


-- 9. Что такое SQL-инъекции и как их избегать?
-- Внедрения зловредного кода путем присоединения к коду SQL запроса
-- дополнения через '... , выполнение хакерских инструкций по получению, обновления данных SQL сервера

-- Никогда не использовать учетную запись владельца БД или root.
-- Всегда использовать максимально ограниченного пользователя.

-- Применять подготовленные PDO выражения с привязанными (bind) переменными.

-- Всегда проверять введенные данные на соответствие требуемому типу:
-- согласно коду или встроенными функциями PHP ( is_numeric(), ctype_digit(), ...) или
-- регулягными выражениями.
-- Возможно принудительное указание типа например settype() или sprintf().

-- Если не используются привязанные переменные (не поддерживает БД) всегда необходимо экранировать нечисловые данные.

-- Не выводить информацио БД, особенно о ее структуре.

-- Выполнять логирование запросов к БД в лог файл или саму БД.

-- примеры:
-- экранирование спецсимволов: \x00, \n, \r, \, ', " и \x1a
-- `php` $mysqli = new mysqli('localhost', 'userD', 'pswdD', 'wold') ;
-- `php` $mysqli->query("CREATE TEMPORERY TABLE myCity LIKE City") ;
-- `php` $city = "s' Moscow";
-- экранируем сроку
-- `php` $city = $mysqli->real_escape_string($city) ;
-- "s\' Moscow";
-- `php` $mysql->query("INSERT INTO myCity (name) VALUES ('$city')") ;
-- `php` $mysql->close() ;

-- Проверить через get_magic_quotes_gpc() и отключить функционал
-- `Magic quotes` - автоматической замены кавычки на обратный слэш (\) и кавычку при операциях ввода/вывода.
-- Для предотвращения двойного экранирования.
-- Можно убирать \\ через:
-- `php` stripslashes($str) ;

-- Using prepares statements
-- Параметры подготовленного запроса не требуется экранировать кавычками;
-- драйвер это делает автоматически.
-- Если в приложении используются исключительно подготовленные запросы.
--
-- <?php
-- $stmt = $dbh->prepare("INSERT INTO registry_tbl (name, value) VALUES (:name, :value)");
-- $stmt->bindParam(':name', $name);
-- $stmt->bindParam(':value', $value);

-- // вставим одну строку
-- $name = 'one';
-- $value = 1;
-- $stmt->execute();

-- // теперь другую строку с другими значениями
-- $name = 'two';
-- $value = 2;
-- $stmt->execute();
